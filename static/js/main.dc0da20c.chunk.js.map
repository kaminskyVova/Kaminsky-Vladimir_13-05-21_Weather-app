{"version":3,"sources":["components/FavoritesCard.jsx","store/weatherSlice.js","FetchRequest.js","store/key.js","components/HomeCard.jsx","hooks/useOnce.js","App.js","store/index.js","index.js"],"names":["FavoritesCard","onSelect","favorites","className","map","name","current","id","key","onClick","temperature","fr","params","this","security","host","port","query","path","queryString","Object","entries","assign","length","xs","join","address","getAddress","fetch","method","responce","json","body","headers","JSON","stringify","apikey","weatherSlice","createSlice","initialState","loading","favoriteCities","autoComplete","forecasts","cityKey","reducers","setLoading","state","action","payload","addCityKey","setCurrent","setForecasts","setAutoComplete","addToFavorites","removeFavorites","filter","x","useWeather","useSelector","weather","actions","searchCityKey","city","dispatch","a","get","q","result","Key","currentCelsiusAndWind","details","Temperature","Metric","Value","wind","Wind","Speed","humidity","RelativeHumidity","clouds","CloudCover","forecasts5days","metric","DailyForecasts","currentValues","df","date","Date","min","Minimum","max","Maximum","HomeCard","defaultCity","addFavorite","removeFavorite","useState","setCity","useDispatch","variants","showCityKey","showCity","step","useMemo","useEffect","callback","search","content","role","width","src","button","some","forecast","index","DayCard","variantsList","style","display","variant","e","preventDefault","TextField","label","type","value","onChange","target","replace","disabled","Button","color","size","resSearch","LocalizedName","autocompleteSearch","day","getDay","App","weahter","mainMode","setMainMode","setDefaultCity","favorite","favoriteId","configureStore","reducer","weatherReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.dc0da20c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../scss/favoritePage.scss\"\n\nexport default function FavoritesCard({ onSelect, favorites }) {\n\treturn (\n\t\t<div className=\"d-flex justify-content-center flex-wrap\">\n\t\t\t{favorites.map(({ name, current, id }) => (\n\t\t\t\t<div\n\t\t\t\t\tkey={id}\n\t\t\t\t\tclassName=\"border border-primary text-center p-3 m-1 border-added\"\n\t\t\t\t\tonClick={() => onSelect(name)}\n\t\t\t\t>\n\t\t\t\t\t{name}\n\t\t\t\t\t<br />\n\t\t\t\t\t{current.temperature} C\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\n\nimport apikey from \"./key\";\nimport FetchRequest from \"../FetchRequest\";\n\nconst fr = new FetchRequest({\n\tsecurity: true,\n\thost: \"dataservice.accuweather.com\",\n\tquery: { apikey },\n});\n\nexport const weatherSlice = createSlice({\n\tname: \"weather\",\n\n\tinitialState: {\n\t\tloading: false,\n\t\tfavoriteCities: [],\n\t\tautoComplete: [],\n\t\tforecasts: [],\n\t\tcurrent: {},\n\t\tcityKey: null,\n\t},\n\n\treducers: {\n\t\tsetLoading(state, action) {\n\t\t\tstate.loading = action.payload;\n\t\t},\n\n\t\taddCityKey(state, action) {\n\t\t\tif (action.payload) {\n\t\t\t\tstate.cityKey = action.payload;\n\t\t\t\tstate.autoComplete = [];\n\t\t\t}\n\t\t},\n\n\t\tsetCurrent(state, action) {\n\t\t\tstate.current = action.payload;\n\t\t},\n\n\t\tsetForecasts(state, action) {\n\t\t\tif (action.payload) {\n\t\t\t\tstate.forecasts = action.payload;\n\t\t\t}\n\t\t},\n\n\t\tsetAutoComplete(state, action) {\n\t\t\tif (action.payload) {\n\t\t\t\tstate.autoComplete = action.payload;\n\t\t\t}\n\t\t},\n\n\t\taddToFavorites(state, action) {\n\t\t\tstate.favoriteCities = [...state.favoriteCities, action.payload];\n\t\t},\n\n\t\tremoveFavorites(state, action) {\n\t\t\tstate.favoriteCities = state.favoriteCities.filter(\n\t\t\t\t(x) => x.id !== action.payload\n\t\t\t);\n\t\t},\n\t},\n});\n\nexport const useWeather = () => useSelector((state) => state.weather);\n\nexport const {\n\tsetLoading,\n\taddCityKey,\n\tsetCurrent,\n\tsetForecasts,\n\tsetAutoComplete,\n\taddToFavorites,\n\tremoveFavorites,\n} = weatherSlice.actions;\n\nexport const searchCityKey = (city) => async (dispatch) => {\n\tif (!city) {\n\t\treturn;\n\t}\n\n\tdispatch(setLoading(true));\n\tconst result = await fr.get(\"/locations/v1/cities/search\", { q: city });\n\tdispatch(setLoading(false));\n\n\tif (result && result.length) {\n\t\tdispatch(addCityKey(result[0].Key));\n\t}\n};\n\nexport const currentCelsiusAndWind = (cityKey) => async (dispatch) => {\n\tif (!cityKey) {\n\t\treturn;\n\t}\n\n\tdispatch(setLoading(true));\n\tconst result = await fr.get(`/currentconditions/v1/${cityKey}`, {\n\t\tdetails: true,\n\t});\n\tdispatch(setLoading(false));\n\n\tif (result && result.length) {\n\t\tdispatch(\n\t\t\tsetCurrent({\n\t\t\t\ttemperature: result[0].Temperature.Metric.Value,\n\t\t\t\twind: result[0].Wind.Speed.Metric.Value,\n\t\t\t\thumidity: result[0].RelativeHumidity,\n\t\t\t\tclouds: result[0].CloudCover,\n\t\t\t})\n\t\t);\n\t}\n};\n\nexport const forecasts5days = (cityKey) => async (dispatch) => {\n\tif (!cityKey) {\n\t\treturn;\n\t}\n\n\tdispatch(setLoading(true));\n\tconst result = await fr.get(`/forecasts/v1/daily/5day/${cityKey}`, {\n\t\tmetric: true,\n\t});\n\tdispatch(setLoading(false));\n\n\tif (result && result.DailyForecasts) {\n\t\tconst currentValues = result.DailyForecasts.map((df) => ({\n\t\t\tdate: df.Date,\n\t\t\tmin: df.Temperature.Minimum.Value,\n\t\t\tmax: df.Temperature.Maximum.Value,\n\t\t}));\n\n\t\tdispatch(setForecasts(currentValues));\n\t}\n};\n\nexport const autocompleteSearch = (search) => async (dispatch) => {\n\tif (!search) {\n\t\treturn dispatch(setAutoComplete([]));\n\t}\n\n\tdispatch(setLoading(true));\n\tconst result = await fr.get(\"/locations/v1/cities/autocomplete\", {\n\t\tq: search,\n\t});\n\tdispatch(setLoading(false));\n\n\tif (!result || !result.length) {\n\t\treturn dispatch(setAutoComplete([]));\n\t}\n\n\tconst resSearch = result.map((x) => x.LocalizedName);\n\tdispatch(setAutoComplete(resSearch));\n};\n\nexport default weatherSlice.reducer;\n","export default class FetchRequest {\n\tconstructor(params = {}) {\n\t\tthis.security = params?.security ?? false;\n\t\tthis.host = params.host;\n\t\tthis.port = params?.port ?? (this.security ? \"443\" : \"8080\");\n\t\tthis.query = params?.query ?? {};\n\t}\n\n\tgetAddress(path = \"/\", query = {}) {\n\t\tquery = Object.entries(Object.assign({}, this.query, query));\n\n\t\tlet queryString = \"\";\n\t\tif (query.length) {\n\t\t\tqueryString = \"?\" + query.map((xs) => xs.join(\"=\")).join(\"&\");\n\t\t}\n\n\t\t// prettier-ignore\n\t\treturn `${this.security ? 'https' : 'http'}://${this.host}:${this.port}${path}${queryString}`\n\t}\n\n\tasync get(path, query) {\n\t\tconst address = this.getAddress(path, query);\n\t\tconst responce = await fetch(address, { method: \"GET\" });\n\t\treturn await responce.json();\n\t}\n\n\tasync set(path, body = {}, query) {\n\t\tconst address = this.getAddress(path, query);\n\t\tconst responce = await fetch(address, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"content-type\": \"application/json\" },\n\t\t\tbody: JSON.stringify(body),\n\t\t});\n\n\t\treturn await responce.json();\n\t}\n}\n","export default \"EduaGVlIBqLeADiHx0bQqnOX32la9XRr\";\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useOnce } from \"../hooks\";\nimport \"../scss/homePage.scss\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport {\n    searchCityKey,\n    currentCelsiusAndWind,\n    forecasts5days,\n    autocompleteSearch,\n    useWeather,\n} from \"../store/weatherSlice\";\n\nexport default function HomeCard({\n    defaultCity = \"Tel Aviv\",\n    favorites = [],\n    addFavorite,\n    removeFavorite,\n}) {\n    const [city, setCity] = useState(defaultCity);\n\n    const dispatch = useDispatch();\n\n    const { autoComplete, forecasts, current, cityKey, loading } = useWeather();\n\n    const variants = autoComplete;\n    const showCityKey = cityKey;\n    const showCity = city;\n\n    const wind = current.wind;\n    const humidity = current.humidity;\n    const clouds = current.clouds;\n\n    const step = useMemo(() => {\n        if (loading) {\n            return \"loading\";\n        }\n\n        if (!cityKey) {\n            return \"error\";\n        }\n\n        return \"show\";\n    }, [loading, cityKey]);\n\n    useEffect(() => {\n        dispatch(currentCelsiusAndWind(cityKey));\n        dispatch(forecasts5days(cityKey));\n    }, [currentCelsiusAndWind, forecasts5days, cityKey]);\n\n    const search = async () => {\n        if (!city) {\n            return;\n        }\n\n        dispatch(searchCityKey(city));\n    };\n\n    useOnce(search);\n\n    const autocomplite = () => dispatch(autocompleteSearch(city));\n\n    let content = null;\n\n    if (step === \"loading\") {\n        content = (\n            <div className=\"d-flex justify-content-center m-5\">\n                <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        );\n    } else if (step === \"error\") {\n        content = (\n            <div className=\"m-3\">\n                <div className=\"d-flex justify-content-center\">\n                    <p className=\"text-danger\">City not found. Try again.</p>\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <img\n                        width=\"50\"\n                        src=\"https://image.flaticon.com/icons/svg/3084/3084540.svg\"\n                    ></img>\n                </div>\n            </div>\n        );\n    } else if (step === \"show\") {\n        let button = null;\n\n        if (favorites.some((x) => x.id === showCityKey)) {\n            button = (\n                <div>\n                    <button\n                        className=\"btn btn-primary\"\n                        onClick={() => removeFavorite(showCityKey)}\n                    >\n                        Remove from Favorites\n                    </button>\n                </div>\n            );\n        } else {\n            button = (\n                <div>\n                    <button\n                        className=\"btn btn-primary\"\n                        onClick={() =>\n                            addFavorite({\n                                id: showCityKey,\n                                name: showCity,\n                                current,\n                            })\n                        }\n                    >\n                        Add to Favorites\n                    </button>\n                </div>\n            );\n        }\n\n        content = (\n            <>\n                <div className=\"d-flex justify-content-around\">\n                    <div className=\"to-day\">\n                        {showCity}\n                        {favorites.some((x) => x.id === showCityKey) ? (\n                            <>\n                                <br />\n                                (Added)\n                            </>\n                        ) : (\n                            \"\"\n                        )}\n                        <br />\n                        {current.temperature} C\n                    </div>\n                    {button}\n                </div>\n                <div className=\"d-flex justify-content-center flex-column mx-auto content\">\n                    <div>To day:</div>\n                    <span>Wind: {wind} km/h</span>\n                    <span>Humidity: {humidity} </span>\n                    <span>Clouds: {clouds}</span>\n                </div>\n                <div className=\"d-flex align-items-center justify-content-center flex-wrap\">\n                    {forecasts.map((forecast, index) => (\n                        <DayCard key={index} {...forecast} />\n                    ))}\n                </div>\n            </>\n        );\n    }\n\n    let variantsList = null;\n    if (variants && variants.length) {\n        variantsList = (\n            <>\n                <div\n                    className=\"dropdown-menu display\"\n                    style={{ display: \"block\" }}\n                >\n                    {variants.map((variant, index) => (\n                        <a\n                            key={index}\n                            className=\"dropdown-item\"\n                            onClick={(e) => {\n                                e.preventDefault();\n                                setCity(variant);\n                                search();\n                            }}\n                        >\n                            {variant}\n                        </a>\n                    ))}\n                </div>\n            </>\n        );\n    }\n\n    return (\n        <div className=\"d-flex flex-column\">\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"col-auto\">\n                    <div className=\"input-group\">\n                        <TextField\n                            label=\"Enter city\"\n                            variant=\"outlined\"\n                            className=\"search-input\"\n                            type=\"text\"\n                            value={city}\n                            onChange={(e) => {\n                                setCity(\n                                    e.target.value.replace(\n                                        /[^A-Za-z/ /[/-/]]/gi,\n                                        \"\",\n                                    ),\n                                );\n                            }}\n                            disabled={step === \"loading\"}\n                        />\n\n                        <div className=\"buttons\">\n                            <div className=\"input-group-append\">\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    size=\"large\"\n                                    className=\"btn btn-primary\"\n                                    onClick={search}\n                                    disabled={step === \"loading\"}\n                                >\n                                    Search\n                                </Button>\n                            </div>\n                            <div className=\"input-group-append\">\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    size=\"large\"\n                                    className=\"btn btn-primary\"\n                                    onClick={autocomplite}\n                                    disabled={step === \"loading\"}\n                                >\n                                    Autocomplite\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    {variantsList}\n                </div>\n            </div>\n            {content}\n        </div>\n    );\n}\n\nfunction DayCard({ date, min, max }) {\n    let day = \"\";\n\n    date = new Date(date);\n\n    switch (date.getDay()) {\n        case 0:\n            day = \"Sun\";\n            break;\n        case 1:\n            day = \"Mon\";\n            break;\n        case 2:\n            day = \"Tue\";\n            break;\n        case 3:\n            day = \"Wed\";\n            break;\n        case 4:\n            day = \"Thu\";\n            break;\n        case 5:\n            day = \"Fri\";\n            break;\n        case 6:\n            day = \"Sat\";\n            break;\n    }\n\n    return (\n        <div className=\"border border-primary text-center p-3 m-1\">\n            {day}\n            <br />\n            {min} - {max}C\n        </div>\n    );\n}\n","import { useEffect } from \"react\";\n\nexport default function useOnce(callback) {\n\tuseEffect(() => {\n\t\tcallback();\n\t}, []);\n}\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n\nimport { FavoritesCard, HomeCard } from \"./components\";\nimport \"../src/scss/mainPage.scss\"\n\nimport {\n\tuseWeather,\n\taddToFavorites,\n\tremoveFavorites,\n} from \"./store/weatherSlice\";\n\nfunction App() {\n\tconst weahter = useWeather();\n\tconst dispatch = useDispatch();\n\n\tconst favorites = weahter.favoriteCities;\n\n\tconst [mainMode, setMainMode] = useState(true);\n\tconst [defaultCity, setDefaultCity] = useState(\"TelAviv\");\n\n\tconst addFavorite = (favorite) => {\n\t\tdispatch(addToFavorites(favorite));\n\t};\n\n\tconst removeFavorite = (favoriteId) => {\n\t\tdispatch(removeFavorites(favoriteId));\n\t};\n\n\tlet body = null;\n\n\tif (mainMode) {\n\t\tbody = (\n\t\t\t<HomeCard\n\t\t\t\tdefaultCity={defaultCity}\n\t\t\t\tfavorites={favorites}\n\t\t\t\taddFavorite={addFavorite}\n\t\t\t\tremoveFavorite={removeFavorite}\n\t\t\t/>\n\t\t);\n\t} else {\n\t\tbody = (\n\t\t\t<FavoritesCard\n\t\t\t\tfavorites={favorites}\n\t\t\t\tonSelect={(city) => {\n\t\t\t\t\tsetDefaultCity(city);\n\t\t\t\t\tsetMainMode(true);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"container vh-100 d-flex flex-column justify-content-center\">\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"card-header d-flex justify-content-between\">\n\t\t\t\t\t<div className=\"header-logo\">\n\t\t\t\t\t\tWeather App\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"header-btns\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-primary mr-2\"\n\t\t\t\t\t\tonClick={() => setMainMode(true)}\n\t\t\t\t\t>\n\t\t\t\t\t\tHome\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\tonClick={() => setMainMode(false)}\n\t\t\t\t\t\tdisabled={favorites.length === 0}\n\t\t\t\t\t>\n\t\t\t\t\t\tFavorites\n\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card-body\">{body}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport weatherReducer from \"./weatherSlice\";\n\nexport default configureStore({\n\treducer: {\n\t\tweather: weatherReducer,\n\t},\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}